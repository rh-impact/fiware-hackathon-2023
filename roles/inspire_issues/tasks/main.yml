---
- name: "Get issues"
  uri:
    timeout: 9
    url: "https://api.github.com/graphql"
    return_content: true
    headers:
      Authorization: "bearer {{ GITHUB_TOKEN }}"
    method: POST
    body_format: json
    body:
      query: '{{ lookup("template", "query_issues.graphql") }}'
  register: ISSUES_JSON
- name: "Setup GitHub issues JSON string"
  set_fact: {"{{ PROJECT.title | regex_replace('[^\\w]', '_') }}_ISSUES": "{{ ISSUES_JSON.json.data.organization.repository.issues.nodes | string }}"}

- name: "SETUP FIWARE String vars"
  set_fact:
    MODEL_NAME: "{{ ANSIBLE_COLUMN.name | regex_search('^.*?(?=( - ))') }}"
    SUBMODULE_SHORT_NAME: "{{ ANSIBLE_COLUMN.name | regex_search('^.*?(?=( - )) - (.*?)(?=( - ))', '\\2') | first }}"
    DOMAIN_NAME: "{{ ANSIBLE_COLUMN.name | regex_search('^.*?(?=( - )) - .*?(?=( - )) - (.*)', '\\3') | first }}"

- name: "Create mission impossible issues for column"
  include_role:
    name: inspire_mission_impossible
  vars: 
    CARDS: "{{ lookup('vars', (PROJECT.title | regex_replace('[^\\w]', '_')) + '_COLUMN_' + (COLUMN.id | string) + '_CARDS') }}"
    ISSUES: "{{ lookup('vars', (PROJECT.title | regex_replace('[^\\w]', '_')) + '_ISSUES') }}"
    SMART_DATA_MODEL: "{{ FIWARE_SMART_DATA_MODELS[DOMAIN_NAME].SUBMODULES[SUBMODULE_SHORT_NAME].MODELS[MODEL_NAME] }}"
    DEFAULT_ISSUE_TITLE: "Data specialist - {{ MODEL_NAME }}"
    DEFAULT_ISSUE_MISSION: "Import for the {{ MODEL_NAME }} Smart Data Model"
  when: ANSIBLE_PROJECT.SOLR_APP_NAME is defined
